---
apiVersion: mongodbcommunity.mongodb.com/v1
kind: MongoDBCommunity
metadata:
  name: mongodb-rs-main
  namespace: mongodb
spec:
  members: 1
  type: ReplicaSet
  version: "4.4.18"
  security:
    authentication:
      modes: ["SCRAM"]
  statefulSet:
    spec:
      template:
        spec:
          # securityContext:
          #   runAsUser: 999
          #   runAsGroup: 999
          #   fsGroup: 999
          containers:
            - name: mongod
              resources:
                limits:
                  cpu: "0.5"
                  memory: 500M
                requests:
                  cpu: "0.2"
                  memory: 200M
            - name: mongodb-agent
              # image: "quay.io/mongodb/mongodb-agent:12.0.8.7575-1"
              # securityContext:
              #   allowPrivilegeEscalation: true
              #   readOnlyRootFilesystem: false
              #   privileged: true
              resources:
                limits:
                  cpu: "0.3"
                  memory: 300M
                requests:
                  cpu: "0.2"
                  memory: 200M
          initContainers:
            - command:
                - chown
                - -R
                - "2000"
                - /data
                - /logs
              image: busybox
              volumeMounts:
              - mountPath: /data
                name: data-volume
              - mountPath: /logs
                name: logs-volume
              securityContext:
                runAsNonRoot: false
                runAsUser: 0
                runAsGroup: 0
              name: change-dir-permissions
      volumeClaimTemplates:
        - metadata:
            name: data-volume
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 5G
            selector:
              matchLabels:
                # We set this labels when creating the volume
                # (see below)
                type: data
            storageClassName: default
        - metadata:
            name: logs-volume
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 1G
            selector:
              matchLabels:
                type: logs
            storageClassName: default
  users:
    - name: admin
      db: admin
      passwordSecretRef:
        name: mongodb.mongodb-main.admin
      roles:
        - name: clusterAdmin
          db: admin
        - name: userAdminAnyDatabase
          db: admin
      scramCredentialsSecretName: admin-scram
    - name: auth
      db: auth
      passwordSecretRef:
        name: mongodb.mongodb-main.auth
      roles:
        - name: dbAdmin
          db: auth
      scramCredentialsSecretName: auth-scram
  additionalMongodConfig:
    storage.wiredTiger.engineConfig.journalCompressor: zlib
---
apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: mongodb-data
      namespace: mongodb
      labels:
        type: data
    spec:
      volumeMode: Filesystem
      persistentVolumeReclaimPolicy: Retain
      storageClassName: default
      capacity:
        storage: 5Gi
      accessModes:
        - ReadWriteOnce
      hostPath:
        path: /data/mongodb/data
        type: ""
      nodeAffinity:
        required:
          nodeSelectorTerms:
          - matchExpressions:
            - key: microk8s.io/cluster
              operator: In
              values:
              - "true"
            - key: kubernetes.io/os
              operator: In
              values:
              - "linux"
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: mongodb-logs
      namespace: mongodb
      labels:
        type: logs
    spec:
      volumeMode: Filesystem
      persistentVolumeReclaimPolicy: Retain
      storageClassName: default
      capacity:
        storage: 1Gi
      accessModes:
        - ReadWriteOnce
      hostPath:
        path: /data/mongodb/logs
        type: ""
      nodeAffinity:
        required:
          nodeSelectorTerms:
          - matchExpressions:
            - key: microk8s.io/cluster
              operator: In
              values:
              - "true"
            - key: kubernetes.io/os
              operator: In
              values:
              - "linux"
