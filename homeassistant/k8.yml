apiVersion: v1
kind: PersistentVolume
metadata:
  name: homeassist-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  local:
    path: /data/homeassist
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: microk8s.io/cluster
          operator: In
          values:
          - "true"
        - key: kubernetes.io/os
          operator: In
          values:
          - "linux"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homeassist-pv-claim
  labels:
    app: homeassist
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
  volumeName: homeassist-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homeassist-deployment
  labels:
    app: homeassist
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homeassist
  template:
    metadata:
      labels:
        app: homeassist-app
    spec:
      containers:
        - name: homeassist
          image: homeassistant/home-assistant
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
          ports:
            - containerPort: 8123
          volumeMounts:
            - mountPath: /config
              name: homeassist-persistent-storage
            - mountPath: /config/configuration.yaml
              subPath: configuration.yaml
              name: homeassist-config
      volumes:
        - name: homeassist-config
          configMap:
            name: homeassist-config
            items:
              - key: configuration.yaml
                path: configuration.yaml
        - name: homeassist-persistent-storage
          persistentVolumeClaim:
            claimName: homeassist-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: homeassist-service
spec:
  type: ClusterIP
  selector:
    app: homeassist-app
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8123
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8123
---
apiVersion: v1
kind: Service
metadata:
  name: homeassist-ingress-tcp
  namespace: ingress
  annotations:
    # metallb.universe.tf/loadBalancerIPs: 192.168.31.11
    # metallb.universe.tf/allow-shared-ip: "homeassist-shared-ip"
spec:
  selector:
    name: nginx-ingress-microk8s
  type: LoadBalancer
  # loadBalancerIP is optional. MetalLB will automatically allocate an IP
  # from its pool if not specified. You can also specify one manually.
  loadBalancerIP: 192.168.31.11
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homeassist-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  tls:
    - hosts:
        - homeassist.local.digitalpoet.info
      secretName: tls-local.digitalpoet.info
  rules:
    - host: homeassist.local.digitalpoet.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: homeassist-service
                port:
                  number: 443
